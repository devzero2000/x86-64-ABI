#!/bin/bash

test -z "$CC" && CC=gcc
test -z "$LD" && LD=gcc

# Do not set this flag to anything. It is being set by the different passes
CFLAGS=

trap : SIGABRT

failed=

# Run a test
function runtest() {
  ./the-test > test.out 2>&1
  if [ $? -ne 0 ] ; then
    echo "*** Fail! ***"
    failed="$failed $1"
  else
    echo "Ok."
  fi
}

# Build the new test
function build() {
  rm -f the-test
  rm -f /tmp/test.o
  rm -f /tmp/image.simics

  $CC -c $* $CFLAGS -W -Wall -o /tmp/test.o -DSTACK_SIZE=1024
  $LD /tmp/test.o asm-support.o -o the-test
}

# Test a file
function test_file() {
  echo -n "$1: "
  if [ "$CFLAGS" != "" ] && [ "`grep 'optimization level' $1 | grep -e $CFLAGS`" != "" ] ; then
    echo "Skipped."
  else
    old_CFLAGS="$CFLAGS"
    if grep 'fno-omit-frame-pointer' $1 > /dev/null 2>&1; then
      CFLAGS="$CFLAGS -fno-omit-frame-pointer"
    fi
    build $*
    CFLAGS="$old_CFLAGS"
    if [ -f the-test ] ; then
      runtest $1
      return
    else
      echo "Compile error"
    fi
  fi
}

function run_all_tests() {
  if [ "$CFLAGS" == "" ] ; then
    echo -e "\nTesting without optimization"
  else
    echo -e "\nTesting with $CFLAGS"
  fi

  # Testing only some files or all of them?
  if [ "$1" != "" ] ; then
    for file in $*; do
      test_file $file
    done
  else
    for file in test_*.c; do
      test_file $file;
    done
  fi
}


echo "Running make to build all autogenerated tests"
make

run_all_tests $*

CFLAGS=-O1
run_all_tests $*

CFLAGS=-O2
run_all_tests $*

if test -n "$failed"; then
  echo "failed: $failed"
  exit 1
fi
exit 0
