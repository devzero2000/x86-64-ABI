OBJECT cpu0 TYPE x86 {
	queue: cpu0
	freq_mhz: 20
	physical_memory: phys_mem0
	port_space: port_mem0
	apic: apic0


        # 32-bit code segment, base 0, size 4G
        cs: (8, 1, 0, 1, 1, 1, 10, 0, 0xFFFFF, 1, 0)

        # 32-bit data/stack segments, base 0, size 4G
        ds: (16, 1, 0, 1, 1, 1, 3, 0, 0xFFFFF, 1, 0)
        ss: (16, 1, 0, 1, 1, 1, 3, 0, 0xFFFFF, 1, 0)
        es: (16, 1, 0, 1, 1, 1, 3, 0, 0xFFFFF, 1, 0)
        fs: (16, 1, 0, 1, 1, 1, 3, 0, 0xFFFFF, 1, 0)
        gs: (16, 1, 0, 1, 1, 1, 3, 0, 0xFFFFF, 1, 0)

        # CPL 0
        cpl: 0

        # Enable protected mode
        cr0: 0x00040011

        # Enable PAE, SSE and PSE
        cr4: 0x630

															        # Set starting RIP
																        rip: 0

}
OBJECT ioapic0 TYPE I/O-APIC {
        apic_bus: apic_bus0
}
OBJECT apic_bus0 TYPE apic-bus {
        apics: (apic0)
        ioapic: ioapic0
}
OBJECT apic0 TYPE apic {
        apic_id: 0
        apic_bus: apic_bus0
        cpu: cpu0
        queue: cpu0
}

OBJECT phys_mem0 TYPE memory-space {
	map: ((0x00000, mem0, 0, 0x00000, 0x1000000))
}
OBJECT port_mem0 TYPE port-space {
	map: ()
}
OBJECT mem0 TYPE ram {
	image: mem0_image
}
OBJECT mem0_image TYPE image {
	queue: cpu0
	size: 0x1000000
}
OBJECT setmem0 TYPE set-memory {
}
OBJECT rec0 TYPE recorder {
}
OBJECT primary_thread TYPE thread {
}
