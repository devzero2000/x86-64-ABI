What's this?
------------

This is an abitestsuite for gcc and binutils for the x86-64
architechture. It currently tests these things:

   1: Size and alignment -- sizal()
      Tests for correct size and alignment of all basic types, structs
      and arrays. Also tests bitfields.
   2: Passing scalar arguments -- scalarargs()
      Tests that arguments of basic types are passed and returned correctly.
   3: Passing struct and union arguments -- structargs()
      Tests that arguments of struct and union types are passed and
      returned correctly. Also tests for mixed struct/union/scalar types
   4: Passing a variable number of args -- variargs()
   5: Generation of relocation types -- reloc()
      Not implemented yet.

Questions about the abitest can be directed to discuss@x86-64.org or to
Bo Thorsen <bo@suse.de>.


Documentation
-------------

No setup is being done yet, so if the defaults here doesn't suit your setup,
edit the Makefile.

To build the test just run `make`. This will overwrite your current
/usr/local/share/simnow/images/start64.ram so if this is a problem, you
should edit the Makefile before `make`ing. To run it then call
`simnow /usr/local/share/simnow/images/snippet.bsd`.

To make it successfully you need to have simnowlink in /opt/x86-64/bin and
ldscr.lds, ldscr2.lds, libc.a and start64.o in /opt/x86-64/lib. All these
files can be found in the runtime directory on the x86-64.org cvs server.
You can use another directory for the x86-64 files by calling make like
`make X86_64DIR=/dir/with/x86-64/files`.

If you are working on this project, you should do `make dep` to get Makefile
dependencies working.


Makefile targets
----------------

`make` will produce a a.out executable which you probably won't be able to
use for anything for now. It also produces start64.ram in simnow/images,
which is used by snippet.bsd for running programs in the simulator.

If you want to see the assembler source of file.c produced by gcc, just run
`make file.s`. Note that `make clean` will remove these files.

`make dist-clean` will remove all files that `make clean` does and also
the generated assembler sources and the Makefile dependency file.


Known problems in GCC and binutils for now
------------------------------------------

These are the bug in GCC the test uncovers:

- long double is wrong

- the types __int128, __float128, __m64 and __m128 are not implemented
